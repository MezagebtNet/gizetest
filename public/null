$slug = 'addmes';
$user = User::find(2);
$tz = 'Africa/Addis_Ababa'; $now = new DateTime("now", new DateTimeZone($tz) );
echo $now->format('Y-m-d H:i:s');

        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();
                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);
        
        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();
		  
		  
		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
								if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;
				  	
					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);
				  
				}
			  }
				
			}

        }

                $vid_id = 41;
$validity = false;
        foreach ($channelvideos as $vid) {
		  	            if($vid->id == $vid_id){
                $validity = true;
            }
        }

        return $validity;
Channelvideo::find(1);
Channelvideo::find(11);
$featured_videos = Channelvideo::with('gizeChannel')
                    ->where('active', 1)
                    ->where('is_free', 1)
                    ->orderBy("is_featured", "Desc")
                    ->orderBy("is_free", "Asc")
                    ->get();
$featured_videos = Channelvideo::
                    ->where('active', 1)
                    ->where('is_free', 1)
                    ->orderBy("is_featured", "Desc")
                    ->orderBy("is_free", "Asc")
                    ->get();
$featured_videos = Channelvideo::where('active', 1)
                    ->where('is_free', 1)
                    ->orderBy("is_featured", "Desc")
                    ->orderBy("is_free", "Asc")
                    ->get();
$featured_videos = Channelvideo::where('active', 1)
                                        ->orderBy("is_featured", "Desc")
                    ->orderBy("is_free", "Asc")
                    ->get();
$featured_videos = Channelvideo::with('gizeChannel')
                    ->where('active', 1)
                                        ->orderBy("is_featured", "Desc")
                    ->orderBy("is_free", "Asc")
                    ->get();
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');
return $user_batches;

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');
return $user_batches;

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);
return $active_batches;

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);
return $active_batches->get();

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();



        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $videos->pluck('id'))
			  ->get();


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  
		  return $videos_in_batch;


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				if($vid->active == 1) {
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				}
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  return $videos_in_batch->count();
		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
					$channelvideos = $channelvideos->merge($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
					$channelvideos = $channelvideos->add($vid);

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
				$new = $channelvideos->add($vid)
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				echo '<br/>';
				$new = $channelvideos->add($vid);
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				$new = $channelvideos->add($vid);
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
				$new = $channelvideos->add($vid);
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  echo $vid;
				$new = $channelvideos->add($vid);
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					)
					  
					  				$new = $channelvideos->add($vid);
					$channelvideos = $new;

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
						echo $vid;
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
						echo $vid;
					   echo $starts_at;
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  
					   echo $starts_at;
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  
					   echo $starts_at;
					  echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now);
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  
					   echo $ends_at;
					  echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now);
					  
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  if($vid->id == 41){
						echo $ends_at;
						echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now);
					  }
					   
					  
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  return $vid;
					  if($vid->id == 41){
						echo $ends_at;
						echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now);
					  }
					   
					  
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  return $vid->id;
					  if($vid->id == 41){
						echo $ends_at;
						echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now);
					  }
					   
					  
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
$slug = 'addmes';
        $user = \Auth::user();
        $tz = \Config::get('app.timezone'); 
                $now = new \DateTime("now", new \DateTimeZone($tz) );

                        
        $gize_channel = GizeChannel::where('slug', $slug)->firstOrFail();

                $user_id = $user->id;

        $user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

        $active_batches = Batch::whereIn('id', $user_batches)->where('status', 1);

        $batches_in_channel = $active_batches->where('gize_channel_id', $gize_channel->id)->get();

        $channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
            ->whereIn('video_available_for', [1, 2])
            ->get();


		$video_ids = $videos->pluck('id');

        foreach ($batches_in_channel as $batch) {

            $videos_in_batch = BatchChannelvideo::where('batch_id', $batch->id)
                ->whereIn('channelvideo_id', $video_ids)
			  ->get();
		  


		  	foreach($videos_in_batch as $videos){
			  foreach($videos->video as $vid){
				
				  	$batch_channelvideo_id = $videos->id;
				    $starts_at = $videos->starts_at;
				    $ends_at = $videos->ends_at;
				    $batch_id = $videos->batch_id;
				  	$vid->starts_at = $starts_at;
				  	$vid->ends_at = $ends_at;
				  	$vid->batch_id = $batch_id;
					$vid->batch_channelvideo_id = $batch_channelvideo_id;

					if(
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $starts_at, $tz)->lte($now) &&
					  \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now)
					){
					  return $vid->id;
					  if($vid->id == 41){
						echo $ends_at;
						echo \Carbon\Carbon::createFromFormat('Y-m-d H:i:s',  $ends_at, $tz)->gte($now);
					  }
					   
					  
						$new = $channelvideos->add($vid);
						$channelvideos = $new;

					}
					  

				
			  }

			}

        }

                return $channelvideos;
