$now = \Carbon\Carbon::now();
$user_id = 2;
$gize_channel_id = 1;

		$user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

		

		$channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
		  ->whereIn('video_available_for', [1, 2])
		  ->get();

		
		$active_channelvideo_ids = $videos->pluck('id');
				$result = User::find($user_id)->channelvideos()
		  ->whereIn('channelvideos.id', $active_channelvideo_ids)
		  ->where('gize_channel_id', $gize_channel_id)->get();


        $rentals = collect([]);

        foreach ($result as $rent) {
		  if($rent->rental_detail->started_at == null && $rent->rental_detail->status == 0){
            $start_date = $rent->rental_detail->published_at;
            $within_days = $rent->rental_detail->within_days;

            $end_date = \Carbon\Carbon::createFromFormat('Y-m-d H:i:s', $start_date)->addDays($within_days);

            $check = $now->between($start_date, $end_date);

            if ($check) {

                $rentals = $rentals->add($rent);

            }
		  }
		  else if ($rent->rental_detail->started_at != null && $rent->rental_detail->status != 0) {
		  	$start_date = $rent->rental_detail->started_at;
            $for_hours = $rent->rental_detail->for_hours;

            $end_date = \Carbon\Carbon::createFromFormat('Y-m-d H:i:s', $start_date)->addHours($for_hours);

            $check = $now->between($start_date, $end_date);

            if ($check) {

                $rentals = $rentals->add($rent);

            }
		  }
        }

        return $rentals;
$now = \Carbon\Carbon::now();
$user_id = 2;
$gize_channel_id = 1;

		$user_batches = BatchUser::where('user_id', $user_id)
            ->where('active', 1)
            ->get()->pluck('batch_id');

		

		$channelvideos = collect([]);

        $videos = Channelvideo::where('active', 1)
		  ->whereIn('video_available_for', [1, 2])
		  ->get();

		
		$active_channelvideo_ids = $videos->pluck('id');
				$result = User::find($user_id)->channelvideos()
		  ->whereIn('channelvideos.id', $active_channelvideo_ids)
		  ->where('gize_channel_id', $gize_channel_id)->get();


        $rentals = collect([]);

        foreach ($result as $rent) {
		  if($rent->rental_detail->started_at == null && $rent->rental_detail->status == 0){
            $start_date = $rent->rental_detail->published_at;
            $within_days = $rent->rental_detail->within_days;

            $end_date = \Carbon\Carbon::createFromFormat('Y-m-d H:i:s', $start_date)->addDays($within_days);

            $check = $now->between($start_date, $end_date);

            if ($check) {

                $rentals = $rentals->add($rent);

            }
		  }
		  else if ($rent->rental_detail->started_at != null && $rent->rental_detail->status != 0) {
		  	$start_date = $rent->rental_detail->started_at;
            $for_hours = $rent->rental_detail->for_hours;

            $end_date = \Carbon\Carbon::createFromFormat('Y-m-d H:i:s', $start_date)->addHours($for_hours);

            $check = $now->between($start_date, $end_date);

            if ($check) {

                $rentals = $rentals->add($rent);

            }
		  }
        }

        return $rentals;
$user_id = 2;
DB::table('channelvideo_rentals')
            ->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at')
            ->update(['status' => 2]);
$user_id = 2;
$channelvideo_rental_id = 2;
DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');
$user_id = 2;
$channelvideo_rental_id = 2;
DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at')->get()
$user_id = 2;
$channelvideo_rental_id = 2;
DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at')->value('started_at')
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->value('started_at');
        $for_hours = $q->value('started_at');
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->value('started_at');
        $for_hours = $q->value('started_at');
return $started_at
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->value('started_at');
        $for_hours = $q->value('started_at');
return $for_hours
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->value('started_at');
        $for_hours = $q->value('started_at');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->'started_at');
        $for_hours = $q->started_at;
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->started_at;
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->get()-started_at;
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->get()->started_at;
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->get()->value('started_at');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->value('started_at');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = $q->value('started_at');
        $for_hours = $q->value('for_hours');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->value('for_hours');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('started_at', 'for_hours')
			->where('id', $channelvideo_rental_id);

                $for_hours = $q->value('for_hours');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

                $for_hours = $q->value('for_hours');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('for_hours');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');
return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');

return $for_hours;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');

return $started_at;
$user_id = 2;
$channelvideo_rental_id = 2;
$q =  DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)
            ->whereNotNull('started_at');

        $started_at = DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)->value('started_at');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');

return $started_at;
$user_id = 2;
$channelvideo_rental_id = 2;


        $started_at = DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)->value('started_at');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');

return $started_at;
$user_id = 2;
$channelvideo_rental_id = 2;


        $started_at = DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)->value('started_at');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');
        $ends_at = Jenssegers\Date\Date::createFromFormat('Y-m-d H:i:s', $started_at)->addHours($for_hours)->setTimezone(\Config::get('app.timezone'))->format('M d, Y H:i A');

return $ends_at;
$user_id = 2;
$channelvideo_rental_id = 2;


        $started_at = DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)->value('started_at');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');
        $ends_at = Jenssegers\Date\Date::createFromFormat('Y-m-d H:i:s', $started_at)->addHours($for_hours)->setTimezone(\Config::get('app.timezone'))->format('M d, Y H:i A');

return $ends_at;
$user_id = 2;
$channelvideo_rental_id = 2;


        $started_at = DB::table('channelvideo_rentals')
            ->select('started_at')
			->where('id', $channelvideo_rental_id)->value('started_at');
        $for_hours = DB::table('channelvideo_rentals')
            ->select('for_hours')
			->where('id', $channelvideo_rental_id)->value('for_hours');
        $ends_at = Jenssegers\Date\Date::createFromFormat('Y-m-d H:i:s', $started_at)->addHours($for_hours)->setTimezone(\Config::get('app.timezone'))->format('M d, Y H:i A');

return $ends_at;
